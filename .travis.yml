language: java

jdk: openjdk8

services:  
  - xvfb
  - docker

dist: xenial

addons:
  sonarcloud:
    organization: "continuous-integration-and-deployment"
    token:
      secure: "F89nwAAPeTVFSquNKQvyjNXrQoghgdX93bn96lU0QPmRT1UJzokkg59o82jGByeOVp3DDGlUS7KDTkmcZYsl+J7IwiOcbX78uZdl9+ehPSOOHehJ3eihGJtYQ1mjbelZkuDIdah/J/n4InzjnXelC1XOwZe8RKwxeDxSyrPPr170XtXmUZxPZR8RNZx7ZEfkn7Z8MUcn16DvTt1ENCurAvSdBSJ4ZlTz0zXFodT4I5hYcdT8mPG5PpHhxEuJFIp9/HSQg4EAGMgO02ni7F91irl8x7C2LoA18l2uWa8GYamWohz08IZy1eahiqei4vLF6OoRAiVvYOHgNkPPlCUhsQ4AYgQsUPwYLJm1KdIjoKF6SIOTB7e5Mp4+EDR/kMVwL7jua1YMA+OPIFcZtEv4JX0y/uYZdakBgy7++W2xnboAYgyBmcka0jsIssSOdtL3FoJC//8jggg6kbxB12Ra4T2jIydaOz0wzYD6lguC9isCkjnspYthi6lNOqN7yqQEV2JIgzJ7nz58D8TJOUeB+rjsf0oNUnyqff7HNrVzno2WBtaE5SlDvFpmrNTxXiWnzVY10Hojfb33zDQMo5xb0Zc2JSs3V31p+e1e3dh/vfrGIl4py2g43VbT9cRq3Z0WNDRm3at4vHDMHsmv0F9NiQM8hcfv2LeTHTt5n5I3GeY="
  


before_install:
  # - mvn clean
  - sudo apt update
  - sudo apt install openjfx
  - echo "$DOCKER_PASSWORD" | docker login  -u "$DOCKER_USERNAME" --password-stdin
  - docker pull openjdk:8-jdk

# env:
#  global:
#    - CODECOV_TOKEN=:uuid-repo-token

install: true



#script:
  # the following command line builds the project, runs the tests with coverage and then execute the SonarCloud analysis
 # - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar

# travis encrypt f7c7d23647660f233b403809fed54b0fffd0e824

script: 
  #  - cat $HOME/.m2/settings.xml
    - ./build.sh
  #  - "mvn cobertura:cobertura"
  #- dir
  #- cd microservice_B_(Java_wSpringBoot) 
  #- mvn clean
  #We avoid this error :" the job exceeded the maximum log length and has been terminated "
  #- echo -e '<?xml version="1.0" encoding="UTF-8"?>\n<settings xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd" xmlns="http://maven.apache.org/SETTINGS/1.1.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <mirrors>\n    <mirror>\n      <id>mvnsearch-unavailable</id>\n      <name>mvnsearch-unavailable</name>\n      <mirrorOf>mvnsearch</mirrorOf>\n      <url>http://repo1.maven.org/maven2</url>\n    </mirror>\n  </mirrors>\n  <profiles>\n    <profile>\n      <id>no-mvnsearch</id>\n      <repositories>\n        <repository>\n          <id>mvnsearch</id>\n          <url>http://www.mvnsearch.org/maven2</url>\n          <releases>\n            <enabled>true</enabled>\n          </releases>\n          <snapshots>\n            <enabled>true</enabled>\n          </snapshots>\n        </repository>\n      </repositories>\n    </profile>\n  </profiles>\n  <activeProfiles>\n    <activeProfile>no-mvnsearch</activeProfile>\n  </activeProfiles>\n</settings>' > $HOME/.m2/settings.xml
  #- cat $HOME/.m2/settings.xml
  #deploying the app on Docker
  #- 
  # - mvn deploy
  # - mvn clean

#  language: java
#jdk:
# - openjdk8
#services:
 #Linking Travis CI and Docker
# - docker
# before_install:
# - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
# - docker pull openjdk:8-jdk
#script:
 #We avoid this error :" the job exceeded the maximum log length and has been terminated "
#  - echo -e '<?xml version="1.0" encoding="UTF-8"?>\n<settings
# xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0
# http://maven.apache.org/xsd/settings-1.1.0.xsd"
# xmlns="http://maven.apache.org/SETTINGS/1.1.0"\n
# xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n <mirrors>\n <mirror>\n
# <id>mvnsearch-unavailable</id>\n <name>mvnsearch-unavailable</name>\n
# <mirrorOf>mvnsearch</mirrorOf>\n <url>http://repo1.maven.org/maven2</url>\n
# </mirror>\n </mirrors>\n <profiles>\n <profile>\n <id>no-mvnsearch</id>\n
# <repositories>\n <repository>\n <id>mvnsearch</id>\n
# <url>http://www.mvnsearch.org/maven2</url>\n <releases>\n
# <enabled>true</enabled>\n </releases>\n <snapshots>\n
# <enabled>true</enabled>\n </snapshots>\n </repository>\n
# </repositories>\n </profile>\n </profiles>\n <activeProfiles>\n <activeProfile>nomvnsearch</activeProfile>\n </activeProfiles>\n</settings>' > $HOME/.m2/settings.xml
# - cat $HOME/.m2/settings.xml
 #deploying the app on Docker
# - cd ..
# - mvn deploy

#  - export CODECOV_TOKEN="token"

after_success:
 # - travis_wait mvn site
  - bash <(curl -s https://codecov.io/bash) -t "$CODECOV_TOKEN"
  - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar