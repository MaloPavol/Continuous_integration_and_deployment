language: java

jdk: openjdk8

services:  
  - xvfb
  - docker

dist: xenial

addons:
  sonarcloud:
    organization: "continuous-integration-and-deployment"
    token:
      secure: "EslNjEf1YyAyMSVZkbDhXumkkPRoLRdW7f41Y1XMryRoq6Wxau9eDMzgaYpNJpl9o6jH3dHQTgyU/flfK/aU31hIxtqC7SJolchof2mJHGW8eZhq0s2wb/t4fpJPhXEGVtT4Dzjieudn2FBsQ6Kv1RpyHnSnL7BY5ieNC26wuXmu4DSK/s+JFAvgkxfo9Nwo/Bdq9ZqC0tNHBzI1tWpk5LfMPXVstuDjcWWHI2hpjlWw3U++xEjgOXfwfuY2vBerCQ+ZwIDEAQ/8iSG3ARo8QEEefUxwbnFjnFkmf3P2u2VC3JwlSv9GAUjNCuO3u2QZEAsqpHVCy9wyF6EXLizrJjTo4lSK8Tak6j0bB6U0rdkL+bOeVpWn3hD8Q8CJCz3s6ityR8zyN+KkFFab2kP/X8RPNo8B3GNwT1O3knIxVb+eAG8oFVXCj6A8GLg2W4/YrC4WMWoCn2gerDpPVZqUK0uxoMI4KQ0vMaP4jZiuEDS4DgpLn1q2ibKNnzXRFyXpmVPTvFh46VpI3gyh4CkpXtUzeuBmNpYNTKv1jrbTLWDWVevFvWFdyf2BjgbOILWjbntou8sy4t701Yi7KfAKxkZ0J0XDpj0gPWcZ7IXoaH4pXCoJ9ciWRTzHc2TW/GTAONxG0ItTD9qCTO0o2sWtIgOOF5ccsUTBElvpk/NyScg="


before_install:
  # - mvn clean
  - sudo apt update
  - sudo apt install openjfx
  - echo "$DOCKER_PASSWORD" | docker login  -u "$DOCKER_USERNAME" --password-stdin
  - docker pull openjdk:8-jdk

# env:
#  global:
#    - CODECOV_TOKEN=:uuid-repo-token

install: true



#script:
  # the following command line builds the project, runs the tests with coverage and then execute the SonarCloud analysis
 # - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar

# travis encrypt f7c7d23647660f233b403809fed54b0fffd0e824

script: 
  #  - cat $HOME/.m2/settings.xml
    - ./build.sh
  #  - "mvn cobertura:cobertura"
  #- dir
  #- cd microservice_B_(Java_wSpringBoot) 
  #- mvn clean
  #We avoid this error :" the job exceeded the maximum log length and has been terminated "
  #- echo -e '<?xml version="1.0" encoding="UTF-8"?>\n<settings xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd" xmlns="http://maven.apache.org/SETTINGS/1.1.0"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n  <mirrors>\n    <mirror>\n      <id>mvnsearch-unavailable</id>\n      <name>mvnsearch-unavailable</name>\n      <mirrorOf>mvnsearch</mirrorOf>\n      <url>http://repo1.maven.org/maven2</url>\n    </mirror>\n  </mirrors>\n  <profiles>\n    <profile>\n      <id>no-mvnsearch</id>\n      <repositories>\n        <repository>\n          <id>mvnsearch</id>\n          <url>http://www.mvnsearch.org/maven2</url>\n          <releases>\n            <enabled>true</enabled>\n          </releases>\n          <snapshots>\n            <enabled>true</enabled>\n          </snapshots>\n        </repository>\n      </repositories>\n    </profile>\n  </profiles>\n  <activeProfiles>\n    <activeProfile>no-mvnsearch</activeProfile>\n  </activeProfiles>\n</settings>' > $HOME/.m2/settings.xml
  #- cat $HOME/.m2/settings.xml
  #deploying the app on Docker
  #- 
  # - mvn deploy
  # - mvn clean

#  language: java
#jdk:
# - openjdk8
#services:
 #Linking Travis CI and Docker
# - docker
# before_install:
# - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
# - docker pull openjdk:8-jdk
#script:
 #We avoid this error :" the job exceeded the maximum log length and has been terminated "
#  - echo -e '<?xml version="1.0" encoding="UTF-8"?>\n<settings
# xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.1.0
# http://maven.apache.org/xsd/settings-1.1.0.xsd"
# xmlns="http://maven.apache.org/SETTINGS/1.1.0"\n
# xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">\n <mirrors>\n <mirror>\n
# <id>mvnsearch-unavailable</id>\n <name>mvnsearch-unavailable</name>\n
# <mirrorOf>mvnsearch</mirrorOf>\n <url>http://repo1.maven.org/maven2</url>\n
# </mirror>\n </mirrors>\n <profiles>\n <profile>\n <id>no-mvnsearch</id>\n
# <repositories>\n <repository>\n <id>mvnsearch</id>\n
# <url>http://www.mvnsearch.org/maven2</url>\n <releases>\n
# <enabled>true</enabled>\n </releases>\n <snapshots>\n
# <enabled>true</enabled>\n </snapshots>\n </repository>\n
# </repositories>\n </profile>\n </profiles>\n <activeProfiles>\n <activeProfile>nomvnsearch</activeProfile>\n </activeProfiles>\n</settings>' > $HOME/.m2/settings.xml
# - cat $HOME/.m2/settings.xml
 #deploying the app on Docker
# - cd ..
# - mvn deploy

#  - export CODECOV_TOKEN="token"

after_success:
 # - travis_wait mvn site
  - bash <(curl -s https://codecov.io/bash) -t "$CODECOV_TOKEN"
 # - mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install sonar:sonar -Dsonar.projectKey=continuous_integration_and_deployment